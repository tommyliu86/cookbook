const e=JSON.parse('{"key":"v-54ef6582","path":"/leetCode/everyday/2023%E5%B9%B48%E6%9C%8830%E6%97%A5.html","title":"2023年8月30日","lang":"zh-CN","frontmatter":{"title":"2023年8月30日","tag":["广度优先遍历","哈希"]},"headers":[{"level":3,"title":"广度优先遍历+哈希","slug":"广度优先遍历-哈希","link":"#广度优先遍历-哈希","children":[]}],"git":{"createdTime":1693446037000,"updatedTime":1693446037000,"contributors":[{"name":"liuwenfei@xiaomi.com","email":"liuwenfei@xiaomi.com","commits":1}]},"readingTime":{"minutes":1.26,"words":378},"filePathRelative":"leetCode/everyday/2023年8月30日.md","localizedDate":"2023年8月31日","excerpt":"<blockquote>\\n<p><a href=\\"https://leetcode.cn/problems/minimum-jumps-to-reach-home/description/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1654. 到家的最少跳跃次数</a></p>\\n</blockquote>\\n<h1> 思路</h1>\\n<h3> 广度优先遍历+哈希</h3>\\n<p>从题目可以直观的知道，本题可以使用广度优先遍历方法，遍历每一个step可以到达的所有点，进行判断即可。难点在于如何找到边界条件</p>\\n<ol>\\n<li>对于走过的点，我们可以添加到forbids中，这样避免重复路径</li>\\n<li>对于最远距离，参考官方解题方法，我们直接用结论的6000（根本想不到啊）</li>\\n</ol>"}');export{e as data};
