const e=JSON.parse('{"key":"v-dfc5bc3c","path":"/learn/redis.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"createdTime":1701846800000,"updatedTime":1701846800000,"contributors":[{"name":"liuwenfei","email":"liuwenfei@xiaomi.com","commits":1}]},"readingTime":{"minutes":11.68,"words":3505},"filePathRelative":"learn/redis.md","localizedDate":"2023年12月6日","excerpt":"<p>1：缓存技术和框架的重要性</p>\\n<p>互联网的一些高并发，高性能的项目和系统中，缓存技术是起着功不可没的作用。缓存不仅仅是key-value的简单存取，它在具体的业务场景中，还是很复杂的，需要很强的架构设计能力。我曾经就遇到过因为缓存架构设计不到位，导致了系统崩溃的案例。</p>\\n<p>2：缓存的技术方案分类</p>\\n<p>1）是做实时性比较高的那块数据，比如说库存，销量之类的这种数据，我们采取的实时的缓存+数据库双写的技术方案，双写一致性保障的方案。</p>\\n<p>2）是做实时性要求不高的数据，比如说商品的基本信息，等等，我们采取的是三级缓存架构的技术方案，就是说由一个专门的数据生产的服务，去获取整个商品详情页需要的各种数据，经过处理后，将数据放入各级缓存中。</p>"}');export{e as data};
